/*
 * This source file was generated by the Gradle 'init' task
 */
package de.esempe.workflow;

import java.util.List;

import org.tinylog.Logger;

import de.esempe.workflow.Transition.TransistionType;
import jakarta.json.Json;
import jakarta.json.JsonObject;

public class App
{

	public static void main(final String[] args) throws InterruptedException
	{
		CDI.CONTAINER.isRunning();

		final App app = new App();
		final Workflow wf = app.defineWorkflow();
		final Workflowinstance instance = new Workflowinstance(wf);

		final JsonObject data = Json.createObjectBuilder() //
				.add("pc", "R9575") //
				.add("dauer", 60) //
				.add("begründung", "SW-Installation").build();

		instance.start(data);
		Thread.sleep(5000);

		final List<Transition> currentTransistions = instance.getCurrentTransistions();
		instance.fireTransition(currentTransistions.get(0));

		Logger.info("done");
	}

	private Workflow defineWorkflow()
	{
		final Workflow result = CDI.CONTAINER.getType(Workflow.class);

		final State start = new State("Start");
		final State genehmigt = new State("Genehmigt");
		final State abgelehnt = new State("Abgelehnt");
		final State pruefen = new State("prüfen");

		final Transition automatischeGenehmigung = new Transition("Automatische Genehmigung", start, genehmigt);
		automatischeGenehmigung.setType(TransistionType.SYSTEM);

		var script = """
				import groovy.json.JsonSlurper
				def jsonSlurper = new JsonSlurper()
				def map = jsonSlurper.parseText(data)
				map.dauer == 4;
				""";

		final Rule ruleMinDauer = RuleCreator.build("Minimale Dauer", script);
		automatischeGenehmigung.setRule(ruleMinDauer);

		final Transition manuellePruefung = new Transition("Manuelle Prüfung", start, pruefen);
		manuellePruefung.setType(TransistionType.SYSTEM);
		script = """
				import groovy.json.JsonSlurper
				def jsonSlurper = new JsonSlurper()
				def map = jsonSlurper.parseText(data)
				map.dauer == 60;
				""";

		final Rule ruleMaxDauer = RuleCreator.build("Maximale Dauer", script);
		manuellePruefung.setRule(ruleMaxDauer);

		final Transition manuelleGenehmigung = new Transition("Manuelle Prüfung", pruefen, genehmigt);
		final Transition manuelleAblehnung = new Transition("Manuelle Prüfung", pruefen, abgelehnt);

		result.addTransition(automatischeGenehmigung);
		result.addTransition(manuellePruefung);
		result.addTransition(manuelleGenehmigung);
		result.addTransition(manuelleAblehnung);

		return result;
	}

}
